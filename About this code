This program is a "Guess the Number" game implemented in C++. The objective is for the user to guess a random number between 1 and 100, generated by the program. Here’s a detailed explanation of the code:


---

Code Breakdown

1. Header Files

#include <iostream>
#include <cstdlib>
#include <ctime>
#include <conio.h>

<iostream>: Used for input/output operations (cin, cout).

<cstdlib>: Provides the rand() function for random number generation.

<ctime>: Used to seed the random number generator with the current time.

<conio.h>: Provides getch() to wait for a key press.



---

2. Main Function Initialization

srand(time(0));
int min=1, max=100, guess=101, attempt=0;
int rangeOfNumber = min + (rand() % (max - min + 1));

srand(time(0)): Seeds the random number generator with the current time, ensuring different random numbers each run.

min and max: Define the range of numbers (1 to 100).

guess = 101: Initializes the guess variable to an out-of-range value.

attempt = 0: Tracks the number of attempts.

rangeOfNumber: Generates a random number between min and max.



---

3. Game Loop

while (guess != rangeOfNumber) {

A while loop continues until the user's guess matches the random number.



---

4. Game Display and User Input

system("color 06");
cout << "\tWelcome to Guess the Number Game" << endl;
cout << "Enter Your Guess under(1-100):"; cin >> guess;
system("cls");

system("color 06"): Changes the console text color to light purple.

Displays a welcome message and prompts the user to enter their guess.

system("cls"): Clears the console screen after each input.



---

5. Input Validation and Feedback

if (guess < 1 || guess > 100) {
    cout << "Enter on under(1-100) , Try again \nPress any key."; 
    getch(); 
    system("cls");
}

Ensures the guess is within the range (1-100). If not, prompts the user to try again.



---

6. Comparison Logic

else if (guess > rangeOfNumber) {
    cout << "!Too high , Try again \nPress any key."; 
    getch(); 
    system("cls");
} else if (guess < rangeOfNumber) {
    cout << "!Too Low , Try again \nPress any key."; 
    getch(); 
    system("cls");
}

If the guess is greater than the random number, the program says "Too high."

If the guess is less, it says "Too low."

After each feedback, the program waits for a key press (getch()) and clears the screen.



---

7. Increment Attempts

attempt++;

Increments the attempt counter after each guess.



---

8. Winning Message

cout << "You Guess was correct the answer is :" << guess << endl;
cout << "Number of Attempt :" << attempt << endl;
cout << "\"You Win\"";

When the user guesses correctly, the program displays:

The correct number.

The total number of attempts.

A congratulatory message: "You Win."




---

Example Run

1. The random number is generated (e.g., 47).


2. The user guesses:

Input: 50 → Output: "Too high, try again."

Input: 30 → Output: "Too low, try again."

Input: 47 → Output: "You Guess was correct the answer is: 47."



3. Displays the number of attempts and declares the user a winner.




---

Key Features

1. Random Number Generation: Ensures a unique game experience every time.


2. Input Validation: Restricts guesses to the range of 1-100.


3. Interactive Feedback: Guides the user toward the correct answer with hints.


4. Color and Screen Refresh: Enhances user experience with a clean interface.




---

This program is a great example of using basic C++ constructs like loops, conditionals, and random number generation for a fun and engaging application.

